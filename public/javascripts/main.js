//
// do not edit this file or mark the change for mush easy update
// --------------------------------------------------
//

var $ = jQuery.noConflict();

(function($, document, window, viewport) {

  'use strict';

//
// global variable
// --------------------------------------------------
//

  var $html = $('html');
  var $body = $('body');

//
// ie10 viewport fix
// --------------------------------------------------
//

  (function() {
    'use strict';
    if (navigator.userAgent.match(/IEMobile\/10\.0/)) {
      var msViewportStyle = document.createElement('style')
      msViewportStyle.appendChild(
        document.createTextNode(
          '@-ms-viewport{width:auto!important}'
        )
      )
      document.querySelector('head').appendChild(msViewportStyle)
    }
  })();

//
// device detect
// --------------------------------------------------
//

  if ($html.hasClass('desktop')) {
    $html.addClass('is-desktop');
    var isMobile = false;
    var isDesktop = true;
  } else {
    $html.addClass('is-mobile');
    var isMobile = true;
    var isDesktop = false;
  }
  if ($html.hasClass('ie9')) {
    var isIE9 = true;
  }

//
// site loader
// --------------------------------------------------
//

  function fn_siteLoader() {
    $('.site-loader-spinner').velocity('fadeOut', {
      queue: false,
      delay: 0,
      duration: 500,
      complete: function() {
      }
    });

    $('.site-loader-section').each(function() {
      if ($(this).hasClass('_right')) {
        var translateX = '100%';
      } else {
        var translateX = '-100%';
      }

      $(this).velocity({
        translateZ: 0,
        translateX: translateX,
      }, {
        queue: false,
        delay: 300,
        duration: 800,
        easing: [0.645, 0.045, 0.355, 1.000], // easeInOutCubic
        complete: function() {
          if ($(this).hasClass('_left')) {
            $body.addClass('is-loaded');
            $('.site-loader').hide();
            fn_wow();
          }
        }
      });
    });
  }

  $(window).on('load', function() {
    fn_siteLoader();
  });

//
// nav
// --------------------------------------------------
//

  function fn_siteNav() {
    $('.primary-menu').clone().removeClass('primary-menu').addClass('m-primary-menu').appendTo('.m-nav-tb-cell');
    $('.m-primary-menu').find('.primary-menu-list').removeClass('primary-menu-list').addClass('m-primary-menu-list');
    $('.m-primary-menu').find('.primary-menu-item').removeClass('primary-menu-item').addClass('m-primary-menu-item');

    $('.m-nav-toggle, .m-primary-menu-item a').on('click', function(e) {
      e.preventDefault();
      fn_siteNavAnimation();
    });

    function fn_siteNavAnimation() {
      var $mNav = $('.m-nav');

      $body.toggleClass('m-nav-in');

      if ($body.hasClass('m-nav-in')) {
        $mNav.velocity('stop', true)
        .velocity('fadeIn', {
          duration: 500
        });

        $('.m-primary-menu-list').velocity('stop', true)
        .velocity({
          translateY: ['0', '-25%'],
          rotateX: ['0deg', '35deg'],
          opacity: ['1', '.4']
        }, {
          duration: 500
        });
      } else {
        $mNav.velocity('stop', true)
        .velocity('fadeOut', {
          duration: 500
        });

        $('.m-primary-menu-list').velocity('stop', true)
        .velocity({
          translateY: ['25%', '0'],
          rotateX: ['-35deg', '0deg'],
          opacity: ['.4', '1']
        }, {
          duration: 500
        });
      }
    }

    $('a[href^=#]').on('click', function(e) {
      var target = $(this).attr('href');

      e.preventDefault();
      $(target).velocity('stop').velocity('scroll', {
        duration: 500,
        easing: [0.860, 0.000, 0.070, 1.000], // easeInOutQuint
        offset: -56
      });
    });

    // scrollspy
    $body.scrollspy({
      target: '',
      offset: 100
    });

    // navbar scroll
    fn_navbarIsScroll();

    $(window).on('scroll', function() {
      fn_navbarIsScroll();
    });

    function fn_navbarIsScroll() {
      var scroll = $(window).scrollTop();

      (scroll > 0) ? $body.addClass('is-scroll') : $body.removeClass('is-scroll');
    }
  }

  $(window).on('load', function() {
    fn_siteNav();
  });


//
// wow animation
// --------------------------------------------------
//

  function fn_wow() {
    if (!$('html').hasClass('ie9') && !isMobile) {
      var wow = new WOW({
        boxClass:     'wow',
        animateClass: 'animated',
        offset:       0, // default 0
        mobile:       false, // default true
        live:         false, // default true
        callback:     function(box) {
        },
        scrollContainer: null
      });

      wow.init();
    }
  }

//
// equal height
// --------------------------------------------------
//

  function fn_equalHeight() {
    $('[data-equal-height="1"]').matchHeight({});
    $('[data-equal-height="2"]').matchHeight({});
    $('[data-equal-height="3"]').matchHeight({});
  }

  $(window).on('load', function() {
    fn_equalHeight();
  });

//
// contact
// --------------------------------------------------
//

  function fn_contact() {
    var $form = $('#contactForm');
    var $formNotify = $form.find('.form-notify');

    $form.validate({
      onfocusout: false,
      onkeyup: false,
      onclick: false,
      rules: {
        name: {
          required: true
        },
        email: {
          required: true,
          email: true
        },
        message: {
          required: true
        }
      },
      messages: {
        //name: 'Enter your name',
        //email: 'Enter your email address',
        //message: 'Enter message'
      },
      errorPlacement: function(error, element) {},
      highlight: function(element) {
        $(element).parent('.form-group').addClass('error');
      },
      unhighlight: function(element) {
        $(element).parent('.form-group').removeClass('error');
      },
      submitHandler: function(form) {
        $(form).ajaxSubmit({
          type: 'POST',
          url: 'assets/php/contact.php',
          dataType: 'json',
          cache: false,
          data: $form.serialize(),
          success: function(data) {
            if (data.code == 0) {
              $form.validate().resetForm();
              $form[0].reset();
              $form.find('.form-label').removeClass('error');
              $form.find('button').blur();
              $formNotify.removeClass('valid error').addClass('valid').html(data.message).show();
            } else {
              $formNotify.removeClass('valid error').addClass('error').html(data.message).show();
            }
          },
          error: function(data) {
            $formNotify.removeClass('valid').addClass('error').html('An error occurred. Please try again later.').show();
          },
        });
      },
      invalidHandler: function(event, validator) {
        var errors = validator.numberOfInvalids();
        if (errors) {
          var message = errors == 1
            ? 'You missed 1 field. It has been highlighted.'
            : 'You missed ' + errors + ' fields. They have been highlighted.';
          $formNotify.removeClass('valid error').addClass('error').html(message).show();
        }
      }
    });
  }
  fn_contact();

//
// site background
// --------------------------------------------------
//

  function fn_siteBg() {
    // mobile
    if (isMobile) {
      if (_bg_style_mobile == 1 || _bg_style_mobile == 2) {
        fn_siteBgImg();
      }
      else if (_bg_style_mobile == 3 || _bg_style_mobile == 4 || _bg_style_mobile == 5 || _bg_style_mobile == 6) {
        $(window).on('load', function() {
          fn_siteBgSlideshow();
        });
      }
    }

    // desktop
    else {
      if (_bg_style_desktop == 1 || _bg_style_desktop == 2) {
        fn_siteBgImg();
      }
      else if (_bg_style_desktop == 3 || _bg_style_desktop == 4 || _bg_style_desktop == 5 || _bg_style_desktop == 6) {
        fn_siteBgSlideshow();
      }
      else if (_bg_style_desktop == 7 || _bg_style_desktop == 8 || _bg_style_desktop == 9) {
        fn_siteBgVideo();
      }
      else if (_bg_style_desktop == 10 || _bg_style_desktop == 11 || _bg_style_desktop == 12) {
        fn_siteBgVideoYoutube();
      }
    }
  }
  fn_siteBg();

//
// image background
// --------------------------------------------------
//

  function fn_siteBgImg() {
    $('.site-bg-video').remove();

    $body.addClass('is-site-bg-img');
  }

//
// slideshow background
// --------------------------------------------------
//

  function fn_siteBgSlideshow() {
    var $siteBgImg = $('.site-bg-img');

    $('.site-bg-video').remove();

    $body.addClass('is-site-bg-slideshow');
    for (var i = 1; i <= _bg_slideshow_image_amount; i++) {
      $siteBgImg.append('<img src="images/bg/site-bg-slideshow-' + (i < 10 ? '0' + i : i) + '.jpg">');
    }

    if (isMobile) {
      if (_bg_style_mobile == 3 || _bg_style_mobile == 4) {
        fn_ss();
      } else if (_bg_style_mobile == 5 || _bg_style_mobile == 6) {
        fn_kenburnsy();
      }
    }
    else {
      if (_bg_style_desktop == 3 || _bg_style_desktop == 4) {
        fn_ss();
      } else if (_bg_style_desktop == 5 || _bg_style_desktop == 6) {
        fn_kenburnsy();
      }
    }

    function fn_ss() {
      $siteBgImg.ss({
        fullscreen: true,
        duration: _bg_slideshow_duration,
        fadeInDuration: 1500
      });
    }

    function fn_kenburnsy() {
      $siteBgImg.kenburnsy({
        fullscreen: true,
        duration: _bg_slideshow_duration,
        fadeInDuration: 1500
      });
    }
  }

//
// html5 video background
// --------------------------------------------------
//

  function fn_siteBgVideo() {
    var $video = $('.site-bg-video');
    var $audio = $('.audio-toggle-link');

    $body.addClass('is-site-bg-video');

    $video.append('<video id="videoPlayer" autoplay loop>' +
                  '<source src="video/video.mp4" type="video/mp4">' +
                  '</video>');

    var videoPlayer = document.getElementById('videoPlayer');

    if (_bg_style_desktop == 7) {
      videoPlayer.muted = true;
      $audio.remove();
    } else if (_bg_style_desktop == 8) {
      $body.addClass('is-audio');

      $audio.on('click', function() {
        if ($body.hasClass('is-audio')) {
          videoPlayer.muted = true;
          $body.removeClass('is-audio').addClass('is-mute');
        } else if ($body.hasClass('is-mute')) {
          videoPlayer.muted = false;
          $body.removeClass('is-mute').addClass('is-audio');
        }
      });
    }
  }

//
// youtube video background
// --------------------------------------------------
//

  function fn_siteBgVideoYoutube() {
    var $video = $('.site-bg-video');
    var $audio = $('.audio-toggle-link');

    $body.addClass('is-site-bg-video-youtube');
    if (_bg_style_desktop == 10 || _bg_style_desktop == 12) {
      $video.attr('data-property', '{videoURL: _bg_video_youtube_url, autoPlay: true, loop: _bg_video_youtube_loop, startAt: _bg_video_youtube_start, stopAt: _bg_video_youtube_end, mute: true, quality: _bg_video_youtube_quality, realfullscreen: true, optimizeDisplay: true, addRaster: false, showYTLogo: false, showControls: false, stopMovieOnBlur: false, containment: "self"}');
      $video.YTPlayer();
    } else {
      $video.attr('data-property', '{videoURL: _bg_video_youtube_url, autoPlay: true, loop: _bg_video_youtube_loop, startAt: _bg_video_youtube_start, stopAt: _bg_video_youtube_end, mute: false, quality: _bg_video_youtube_quality, realfullscreen: true, optimizeDisplay: true, addRaster: false, showYTLogo: false, showControls: false, stopMovieOnBlur: false, containment: "self"}');
      $video.YTPlayer();

      $body.addClass('is-audio');

      $audio.on('click', function() {
        if ($body.hasClass('is-audio')) {
          videoPlayer.muted = true;
          $body.removeClass('is-audio').addClass('is-mute');
        } else if ($body.hasClass('is-mute')) {
          videoPlayer.muted = false;
          $body.removeClass('is-mute').addClass('is-audio');
        }
      });
    }
  }

//
// background audio
// --------------------------------------------------
//

  function fn_siteBgAudio() {
    if (isMobile) {
      if (_bg_style_mobile == 2 || _bg_style_mobile == 4 || _bg_style_mobile == 6) {
        $body.addClass('is-mute');
        $body.append('<audio id="audioPlayer" loop>' +
                     '<source src="audio/audio.mp3" type="audio/mpeg">' +
                     '</audio>');
        fn_siteBgAudioControl();
      }
    } else {
      if (_bg_style_desktop == 2 || _bg_style_desktop == 4 || _bg_style_desktop == 6 || _bg_style_desktop == 9 || _bg_style_desktop == 12) {
        $body.append('<audio id="audioPlayer" loop>' +
                     '<source src="audio/audio.mp3" type="audio/mpeg">' +
                     '</audio>');

        var $audioPlayer = document.getElementById('audioPlayer');

        $body.addClass('is-audio');
        $audioPlayer.play();
        fn_siteBgAudioControl();
      }
    }

    function fn_siteBgAudioControl() {
      var $audio = $('.audio-toggle-link');
      var $audioPlayer = document.getElementById('audioPlayer');

      $audio.on('click', function() {
        var $this = $(this);

        if ($body.hasClass('is-audio')) {
          $audioPlayer.pause();
          $body.removeClass('is-audio').addClass('is-mute')
        } else if ($body.hasClass('is-mute')) {
          $audioPlayer.play();
          $body.removeClass('is-mute').addClass('is-audio')
        }
      });
    }
  }

  $(window).on('load', function() {
    fn_siteBgAudio();
  });

//
// background effect
// --------------------------------------------------
//

  function fn_siteBgEffect() {
    if (_bg_effect == 0) {
      $('.site-bg-canvas, .site-bg-effect').remove();
    } else if (_bg_effect == 1) {
      fn_siteBgCloud();
    } else if (_bg_effect == 2) {
      fn_siteBgStar();
    }
  }

  function fn_siteBgCloud() {
    var $siteBgEffect = $('.site-bg-effect');
    $('.site-bg-canvas').remove();
    $siteBgEffect.css('opacity', _cloud_opacity);

    if ($siteBgEffect.length) {
      $siteBgEffect.append(
        '<div class="cloud cloud-01"></div>' +
        '<div class="cloud cloud-02"></div>' +
        '<div class="cloud cloud-03"></div>'
      )

      $body.addClass('is-site-bg-cloud');

      fn_cloud01();
      fn_cloud02();
      fn_cloud03();
    }
  }

  function fn_cloud01() {
    var $cloud = $('.cloud-01');

    $cloud.velocity({
      translateZ: '0',
      translateX: ['-100%', '100%']
    }, {
      duration: 25000,
      ease: 'liner',
      queue: false,
      complete: function() {
        $(this).velocity({
          translateX: '100%'
        }, {
          duration: 0,
          queue: false,
          complete: fn_cloud01
        });
      }
    });
  }

  function fn_cloud02() {
    var $cloud = $('.cloud-02');

    $cloud.velocity({
      translateZ: '0',
      translateX: ['-100%', '100%']
    }, {
      duration: 35000,
      ease: 'liner',
      queue: false,
      complete: function() {
        $(this).velocity({
          translateX: '100%'
        }, {
          duration: 0,
          queue: false,
          complete: fn_cloud02
        });
      }
    });
  }

  function fn_cloud03() {
    var $cloud = $('.cloud-03');

    $cloud.velocity({
      translateZ: '0',
      translateX: ['-100%', '100%']
    }, {
      duration: 45000,
      ease: 'liner',
      queue: false,
      complete: function() {
        $(this).velocity({
          translateX: '100%'
        }, {
          duration: 0,
          queue: false,
          complete: fn_cloud03
        });
      }
    });
  }

  function fn_siteBgStar() {
    var $canvas = $('.site-bg-canvas');

    $body.addClass('is-site-bg-star');

    function callCanvas (canvas) {
      var screenpointSplitt = 12000
      var movingSpeed = 0.2
      var viewportWidth = $(window).width();
      var viewportHeight = $(window).height();
      var nbCalculated = Math.round(viewportHeight*viewportWidth/screenpointSplitt);

      var $this = $(this),
      ctx = canvas.getContext('2d');
      $this.config = {
        star: {
          color: _bg_effect_star_color,
          width: _bg_effect_star_width
        },
        line: {
          color: _bg_effect_star_color,
          width: 0.4
        },
        position: {
          x: canvas.width * 0.5,
          y: canvas.height * 0.5
        },
        velocity: movingSpeed,
        length: nbCalculated,
        distance: 130,
        radius: 120,
        stars: []
      };

      function Star () {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;

        this.vx = ($this.config.velocity - (Math.random() * 0.3));
        this.vy = ($this.config.velocity - (Math.random() * 0.3));

        this.radius = Math.random() * $this.config.star.width;
      }

      Star.prototype = {
        create: function(){
          ctx.beginPath();
          ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
          ctx.fill();
        },

        animate: function(){
          var i;
          for(i = 0; i < $this.config.length; i++){

            var star = $this.config.stars[i];

            if(star.y < 0 || star.y > canvas.height){
              star.vx = star.vx;
              star.vy = - star.vy;
            }
            else if(star.x < 0 || star.x > canvas.width){
              star.vx = - star.vx;
              star.vy = star.vy;
            }
            star.x += star.vx;
            star.y += star.vy;
          }
        },

        line: function(){
          var length = $this.config.length,
            iStar,
            jStar,
            i,
            j;

          for(i = 0; i < length; i++){
            for(j = 0; j < length; j++){
              iStar = $this.config.stars[i];
              jStar = $this.config.stars[j];

              if(
                (iStar.x - jStar.x) < $this.config.distance &&
                (iStar.y - jStar.y) < $this.config.distance &&
                (iStar.x - jStar.x) > - $this.config.distance &&
                (iStar.y - jStar.y) > - $this.config.distance
              ) {
                if(
                  (iStar.x - $this.config.position.x) < $this.config.radius &&
                  (iStar.y - $this.config.position.y) < $this.config.radius &&
                  (iStar.x - $this.config.position.x) > - $this.config.radius &&
                  (iStar.y - $this.config.position.y) > - $this.config.radius
                ) {
                  ctx.beginPath();
                  ctx.moveTo(iStar.x, iStar.y);
                  ctx.lineTo(jStar.x, jStar.y);
                  ctx.stroke();
                  ctx.closePath();
                }

              }
            }
          }
        }

      };
      $this.createStars = function () {
        var length = $this.config.length,
          star,
          i;

        ctx.clearRect(0, 0, canvas.width, canvas.height);
        for(i = 0; i < length; i++){
          $this.config.stars.push(new Star());
          star = $this.config.stars[i];
          star.create();
        }

        star.line();
        star.animate();
      };

      $this.setCanvas = function () {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
      };

      $this.setContext = function () {
        ctx.fillStyle = $this.config.star.color;
        ctx.strokeStyle = $this.config.line.color;
        ctx.lineWidth = $this.config.line.width;
        ctx.fill();
      };

      $this.loop = function (callback) {
        callback();
        reqAnimFrame(function () {
          $this.loop(function () {
            callback();
          });
        });
      };

      $this.bind = function () {
        $(window).on('mousemove', function(e){
          $this.config.position.x = e.pageX;
          $this.config.position.y = e.pageY;
        });
      };

      $this.init = function () {
        $this.setCanvas();
        $this.setContext();

        $this.loop(function () {
          $this.createStars();
        });

        $this.bind();
      };

      return $this;
    }

    var reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
      window.setTimeout(callback, 1000 / 60);
    };

    $canvas.hide();

    $(window).on('load', function() {
      setTimeout(function () {
        callCanvas($('canvas')[0]).init();
        $canvas.velocity('transition.fadeIn', {
          duration: 3000
        });
      }, 2000);
    });

    var waitForFinalEvent = (function () {
      var timers = {};
      return function (callback, ms, uniqueId) {
      if (!uniqueId) {
        uniqueId = '';
      }
      if (timers[uniqueId]) {
        clearTimeout (timers[uniqueId]);
      }
      timers[uniqueId] = setTimeout(callback, ms);
      };
    })();

    $(window).resize(function () {
      waitForFinalEvent(function(){
        callCanvas($('canvas')[0]).init();
      }, 800, '');
    });
  }

  fn_siteBgEffect();

})(jQuery, document, window, ResponsiveBootstrapToolkit);
